// update this by typing
// protoc -I=/home/malte/PycharmProjects/BachelorMusic/settings --python_out=/home/malte/PycharmProjects/BachelorMusic/settings /home/malte/PycharmProjects/BachelorMusic/settings/music_info.proto

syntax = "proto2";

package music_info;


enum ErrorEnum {
    WRONG_TIME_SIGNATURE = 0;
    WRONG_BPM = 1;
    WRONG_KEY = 2;
    INVALID_KEY = 3;
    LOW_CORRELATION_KEY = 4;
    NO_PARTS = 5;
    INVALID_FILE = 6;
}


enum MelodyAlgorithm {
    SKYLINE_SIMPLE = 0;
    SKYLINE_ADVANCED = 1;
    TF_SKYLINE = 2;
}


message MelodyList {

    required string filepath = 1;

    optional string extra_info = 2;

    optional MelodyAlgorithm algorithm = 3;

    repeated MelodyPartPB melodies = 4;

}


message MelodyPartPB {

    required float actual_start = 1;

    repeated float offsets = 2;
    repeated float lengths = 3;
    repeated int32 pitches = 4;

}

message Melody {

    required bool lyrics = 1;

    repeated int32 offsets = 2;

    repeated int32 lengths = 3;

    repeated int32 pitches = 4;

    repeated int32 volumes = 5;

}

message SongData {

    required string filepath = 1;

    repeated Melody melodies = 2;

    repeated int32 chords = 3;

}


message VanillaStreamPB {
    required string filepath = 1;

    repeated VanillaPartPB parts = 2;

    required PieceOfMusic info = 3;

}


message VanillaPartPB {

    required string name = 1;

    repeated float offsets = 2;
    repeated float lengths = 3;
    repeated int32 pitches = 4;
    repeated int32 volumes = 5;

}


message PieceOfMusic {
    /* highest used number: error(12) */
    // filepath from starting directory:
    // settings.constants.MXL_DATA_FOLDER
    required string filepath = 1;
    required bool valid = 2;

    // optional string time_signature = 3;
    optional int32 min_metronome = 4;
    optional int32 max_metronome = 5;

    // usually not set, because it should be clear from settings
    optional string key = 6;
    optional float key_correlation = 7;

    repeated Part parts = 8;

    optional ErrorEnum error = 12;

    message Part {

        required string name = 1;
        optional float average_pitch = 2;
        optional float average_volume = 3;
        optional float key_correlation = 5;
        optional float note_percentage = 6;
        optional float lyrics_percentage = 7;

    }
}


message Settings {
    required float min_pitch = 1;
    required float max_pitch = 2;
    required float delete_part_threshold = 3;
    required float delete_stream_threshold = 4;
    required string accepted_key = 5;
    required int32 max_bpm = 6;
    required int32 min_bpm = 7;
    required string valid_time = 8;
}


message MusicList {
    required Settings settings = 1;
    repeated PieceOfMusic music_data = 2;
    required int32 counter = 3;
}